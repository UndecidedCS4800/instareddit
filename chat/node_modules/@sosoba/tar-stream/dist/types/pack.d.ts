/// <reference types="node" />
import type { Readable } from 'node:stream';
import { Transform, Writable } from 'node:stream';
import type { TarHeader } from './headers';
export declare type FileOptions = {
    name: string;
    mode?: number;
    mtime: number;
    uid?: number;
    uname?: string;
    gid?: number;
    gname?: string;
    size?: number;
};
export declare class Pack {
    protected static readonly TAR_END_BLOCKS_COUNT = 2;
    protected paxCounter: number;
    protected transform: Transform;
    get outputStream(): Readable;
    addFile(fileOptions: FileOptions): Promise<Writable>;
    addFile(fileOptions: FileOptions, content: Buffer): Promise<undefined>;
    end(): Promise<void>;
    protected addPaxFile(fileOptions: FileOptions): Promise<string>;
    protected addEntry(header: TarHeader): Promise<Writable>;
    protected writeBuffer(buffer: Buffer): Promise<void>;
}
